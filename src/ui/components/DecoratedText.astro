---
import type { HTMLAttributes } from 'astro/types';
import { cva, type VariantProps } from 'class-variance-authority';

import circleSVG from '../../assets/hand-made/circle.svg?raw';
import decorationSVG from '../../assets/hand-made/decoration.svg?raw';
import underlineSVG from '../../assets/hand-made/underline.svg?raw';

const decoratedText = cva(
  ['absolute', 'inline-flex', 'object-contain', 'z-[-1]'],
  {
    variants: {
      intent: {
        underline: ['decorated-text__underline'],
        circle: ['decorated-text__circle'],
        needle: ['decorated-text__needle', 'text-secondary'],
      },
    },
  }
);

export interface Props
  extends HTMLAttributes<'span'>,
    VariantProps<typeof decoratedText> {}

const { class: className, intent = 'underline' } = Astro.props;

const icon = {
  underline: underlineSVG,
  circle: circleSVG,
  needle: decorationSVG,
}[intent ?? 'underline'];
---

<span class="relative inline-flex">
  <span class={decoratedText({ intent, className })}
    ><Fragment set:html={icon} /></span
  >
  <slot />
</span>

<style>
  .decorated-text__underline {
    bottom: -1.1rem;
    left: -3rem;
    max-width: 150%;
  }
  .decorated-text__circle {
    bottom: 50%;
    left: 50%;
    transform: translate(-45%, 80%);
    max-width: 130%;
  }
  .decorated-text__needle {
    width: 6.5rem;
    height: 6.5rem;
    bottom: 0;
    left: 0;
    transform: translate(-55%, 0);
  }
</style>
