---
import type { HTMLAttributes } from 'astro/types';
import { cva, type VariantProps } from 'class-variance-authority';

import circleSVG from '../../assets/hand-made/circle.svg?raw';
import decorationSVG from '../../assets/hand-made/decoration.svg?raw';
import underlineSVG from '../../assets/hand-made/underline.svg?raw';
import wavyUnderlineSVG from '../../assets/hand-made/wavy-underline.svg?raw';

const decoratedText = cva(
  ['absolute', 'inline-flex', 'items-center', 'object-contain', 'z-[-1]'],
  {
    variants: {
      position: {
        left: [],
        right: [],
      },
      intent: {
        underline: [
          'bottom-[-.8rem]',
          '-left-6.5',
          'max-w-full',
          'md:bottom-[-1.1rem]',
          'md:-left-7.5',
          'lg:max-w-[150%]',
        ],
        wavyUnderline: [
          'bottom-[-.8rem]',
          'max-w-full',
          'bottom-[-2.1rem]',
          'lg:max-w-[150%]',
        ],
        circle: [
          'bottom-1/2',
          'left-1/2',
          'translate-y-1/2',
          '-translate-x-1/2',
          'max-w-[110%]',
          'md:translate-x-[-48%]',
          'md:max-w-[130%]',
        ],
        needle: [
          'text-secondary',
          'w-12',
          'h-12',
          'bottom-2',
          '-translate-y-2.5',
          'md:w-16',
          'md:h-16',
          'md:bottom-0',
        ],
      },
    },
    compoundVariants: [
      {
        intent: 'needle',
        position: 'left',
        class: ['translate-x-[-70%]', 'md:-translate-x-3/4'],
      },
      {
        intent: 'needle',
        position: 'right',
        class: [
          'right-0',
          'translate-x-[70%]',
          'md:translate-x-3/4',
          '-scale-x-100',
        ],
      },
    ],
    defaultVariants: {
      intent: 'underline',
      position: 'left',
    },
  }
);

export interface Props
  extends HTMLAttributes<'span'>,
    VariantProps<typeof decoratedText> {}

const { class: className, intent, position } = Astro.props;

const icon = {
  underline: underlineSVG,
  circle: circleSVG,
  needle: decorationSVG,
  wavyUnderline: wavyUnderlineSVG,
}[intent ?? 'underline'];
---

<span class="relative inline-flex">
  <span class={decoratedText({ intent, position, className })}
    ><Fragment set:html={icon} /></span
  >
  <slot />
</span>
